# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

require 'digest/sha1'

def time_rand from = 0.0, to = Time.now
  Time.at(from + rand * (to.to_f - from.to_f)).strftime("%FT%T%:z")
end

def generate_commit(owner="")
  if owner.eql?("")
    owner = ["Harry", "Larry", "Curly", "Simon", "Sarah"].sample
  end
  rand_date ="2012-09-21T14:28:39-07:00"
  commit_message = (0...50).map{ ('a'..'z').to_a[rand(26)] }.join
  hashed = Digest::SHA1.hexdigest(commit_message)
  {
    :sha => hashed,
    :commit => {
      :comment_count => rand(10),
      :tree => {
        :sha => hashed,
      },
      :committer => {
        :login => "#{owner}",
        :date => time_rand,
      },
      :message => commit_message,
      :author => {
        :login => "#{owner}",
      }
    },
    :author => {:login => "#{owner}"},
    :committer => {:login => "#{owner}"},
    :url => "http://an.url.pl/#{hashed}",
  }
end

def generate_branch(repository)
  # generate a randomised branch
  branch_root = ["feature/new-feature", "develop", "master", "hotfix/some-hotfix", "release/1.0"].sample
  branch_name = "#{branch_root}_#{Time.now.strftime('%H%M%S')}"
  sha = Digest::SHA1.hexdigest("#{branch_name}")
  {"commit"=>
     {"sha"=>"#{sha}",
      "url"=>
       "https://api.github.com/repos/#{repository}/commits/#{sha}"},
    "name"=>branch_name}
end